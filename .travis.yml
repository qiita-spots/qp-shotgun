language: python
sudo: false
env:
  - PYTHON_VERSION=2.7
before_install:
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
  - chmod +x miniconda.sh
  - ./miniconda.sh -f -b -p $PWD/miniconda3
  - export PATH=$PWD/miniconda3/bin:$PATH
  # Update conda itself
  - conda update --yes conda
install:
  # At this moment this plugin has overlapping dependencies than qiita so installing everything in the same environment
  - conda create --yes -n qiita_env python=2.7 pip nose flake8
    pyzmq networkx pyparsing natsort mock future libgfortran
    'pandas>=0.18' 'scipy>0.13.0' 'numpy>=1.7' 'h5py>=2.3.1' matplotlib
  - source activate qiita_env
  - pip install sphinx sphinx-bootstrap-theme coveralls ipython[all]==2.4.1
  - pip install https://github.com/biocore/qiita/archive/master.zip --process-dependency-links
  # installing other deps
  - conda install --yes -c jjhelmus glpk
  - conda install --yes -c bioconda diamond bowtie2 trimmomatic=0.36 fastqc=0.11.5
  #
  - which trimmomatic
  - echo $PATH
  - triommomatic
  - ipython profile create qiita-general --parallel
  - qiita-env start_cluster qiita-general
  - qiita-env make --no-load-ontologies
  - export QIITA_SERVER_CERT=$PWD/miniconda3/envs/qiita_env/lib/python2.7/site-packages/qiita_core/support_files/server.crt
  - pip install https://github.com/qiita-spots/qiita_client/archive/master.zip
  - pip install .
  - wget --quiet https://bitbucket.org/biobakery/metaphlan2/get/default.zip
  - unzip -qq default.zip 'biobakery-metaphlan2*/db_v20/*' 'biobakery-metaphlan2*/metaphlan2.py'
  - ln -s $PWD/miniconda3/envs/qiita_env/share/trimmomatic-0.36-3/trimmomatic.jar $PWD/miniconda3/envs/qiita_env/bin/trimmomatic.jar
  - export HUMANN2_BIN=`which humann2`
  - export HUMANN2_DIR=`dirname $HUMANN2_BIN`
  - mv biobakery-metaphlan2*/metaphlan2.py biobakery-metaphlan2*/db_v20 $HUMANN2_DIR
before_script:
  - export MOI_CONFIG_FP=$PWD/miniconda3/envs/qiita_env/lib/python2.7/site-packages/qiita_core/support_files/config_test.cfg
  - qiita pet webserver start &
  - export QIITA_PID=$!
script:
  - sleep 10 # give enough time to the webserver to start
  - configure_shotgun --env-script "source activate qp-shotgun" --server-cert $QIITA_SERVER_CERT
  - nosetests --with-doctest --with-coverage
  - flake8 qp_shotgun setup.py scripts
addons:
  postgresql: "9.3"
services:
  - redis-server
  - postgresql
after_success:
  - coveralls
  - kill $QIITA_PID
  - qiita-env stop_cluster qiita-general
  - qiita-env drop
after_failure:
  - kill $QIITA_PID
  - qiita-env stop_cluster qiita-general
  - qiita-env drop
